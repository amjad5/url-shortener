 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process// may break
 * ***************************************************/

'use strict';

var fs = require('fs');
var express = require('express');
var app = express();
var validUrl = require('valid-url');
var shortid = require('shortid');
var mongo = require('mongodb').MongoClient

var dburl = `mongodb://${encodeURIComponent(process.env.USER)}:${encodeURIComponent(process.env.PASS)}@${encodeURIComponent(process.env.HOST)}:${encodeURIComponent(process.env.PORT)}/${encodeURIComponent(process.env.DB)}`
  //mongodb://<dbuser>:<dbpassword>@ds259865.mlab.com:59865/freecodecamp
if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

app.use('/public', express.static(process.cwd() + '/public'));

app.route('/_api/package.json')
  .get(function(req, res, next) {
    console.log('requested');
    fs.readFile(__dirname + '/package.json', function(err, data) {
      if(err) return next(err);
      res.type('txt').send(data.toString());
    });
  });
  
app.route('/:uri')
    .get(function(req, res) {
      var uri = req.params.uri;

      mongo.connect(dburl, function(err, db) {
        if (err) throw err
        var collection = db.collection(process.env.COLLECTION)
        collection.find({
            _id : uri
        }).toArray(function(err2, doc){
          if(err2) throw err2
          if (!doc.length) {
            res.json('No results found')
          }
          res.redirect(doc[0].original_url);
        })
        db.close();
      })
    })

app.route('/')
    .get(function(req, res) {
      res.sendFile(process.cwd() + '/views/index.html');
    })

app.route('/new/*')
    .get(function(req, res) {
      var url = req.params[0];
      //res.json(dburl);
      if (validUrl.isUri(url)){
          // res.json(url);
        var doc = {
          _id: shortid.generate(),
          original_url: url 
        }
        mongo.connect(dburl, function(err, db) {
          if (err) throw err
          var collection = db.collection(process.env.COLLECTION)
          collection.insert(doc, function(err, data) {
            if (err) throw err
              var obj = Object();
              obj.original_url = url
              obj.short_url = 'https://url-shortenr.glitch.me/' + data.insertedIds[0]
              res.json(obj)
            db.close()
          })
        })
      }
      else {
          res.json('Not a URI');
      }
      
    })


// Respond not found to all the wrong routes
app.use(function(req, res, next){
  res.status(404);
  res.type('txt').send('Not found');
});

// Error Middleware
app.use(function(err, req, res, next) {
  if(err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }  
})

app.listen(process.env.APPPORT, function () {
  console.log('Node.js listening ...');
});